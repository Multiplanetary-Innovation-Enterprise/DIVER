# Creates a new release when 
name: Create Release

# Controls when the workflow will run
on:
  # Triggers the release creation when changes are pushed onto the master branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# The list of tasks to perform
jobs:
  #Sets up all the required tools and build the packages and applications
  setup:
    # Perform all of the setup an a machine running Ubuntu/Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          check-latest: true
      - name: Setup Tools
        run: |
          echo "----Python Version----"
          python --version
          echo "----------------------"
          
          # Installs the python package manager
          python -m pip install --upgrade pip
          
          # Dependencies for building the packages
          pip install setuptools
          pip install wheel
          
        # Creates the folder to hold the files for creating the release
      - name: Create Release Folder
        run: mkdir Release
          
  # Builds the messaging library
  build-messaging-library:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: setup
    steps:     
        # Builds the messaging library
      - name: Build Messaging
        run: |
          cd "Common/Messaging"
          python setup.py bdist_wheel
          cd dist
          
          # Rename the library file that was created
          
          # Moves the built library to the release folder
          mv *.whl ../../Release    
          
  # Builds the netowrking library
  build-networking-library:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: setup
    steps:     
        # Builds the netowrking library
      - name: Build Networking
        run: |
          cd "Common/Networking"
          python setup.py bdist_wheel
          cd dist
          
          # Rename the library file that was created

          # Moves the built library to the release folder
          mv *.whl ../../Release    
          
  # Creates the executables for the ROV and Client Programs
#  build-applications:
      # The type of runner that the job will run on
   #   runs-on: ubuntu-latest
      
       # TODO
      
  #Creates the actual release
  create-release:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      needs: [build-messaging-library, build-networking-library]
       
      steps:
        - uses: actions/checkout@v3
        
        - run: echo "Creating release"
            cd Release
            ls
          
      
